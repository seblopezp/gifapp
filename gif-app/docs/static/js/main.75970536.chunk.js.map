{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GridListItem.js","components/GifList.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","placeholder","className","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GridListItem","src","alt","GifList","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACvCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAjBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,QAiBnBG,YAAY,oBACZC,UAAU,wB,+BCzBLC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAKFI,MAAMF,GALJ,cAKfG,EALe,gBAOEA,EAAKC,OAPP,uBAObC,EAPa,EAObA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbjB,kBAiBdM,GAjBc,4CAAH,sDCEPO,EAAe,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACxC,OACE,sBAAKJ,UAAU,yCAAf,UACE,qBAAKkB,IAAKd,EAAKe,IAAKL,IACpB,mBAAGd,UAAU,gBAAb,SAA8Bc,QCHvBM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EACdhB,mBAAS,CACjCuB,KAAM,GACNY,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAaxC,OARAC,qBAAU,WACRvB,EAAQC,GAAUuB,MAAK,SAACC,GACtBH,EAAS,CACPd,KAAMiB,EACNL,SAAS,SAGZ,CAACnB,IACGoB,EDZ2BK,CAAazB,GAAjCa,EADyB,EAC/BN,KAAcY,EADiB,EACjBA,QAEtB,OACE,qCACE,oBAAIrB,UAAU,oCAAd,SAAmDE,IAClDmB,GACC,mBAAGrB,UAAU,mCAAb,wBAEF,qBAAKA,UAAU,YAAf,SACGe,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA+BA,GAAZA,EAAIC,aEVpBe,EAAS,WAAO,IAAD,EACU1C,mBAAS,CAAC,kBADpB,mBACnB2C,EADmB,KACP5C,EADO,KAG1B,OACE,gCACE,oBAAIe,UAAU,QAAd,qBACA,cAAC,EAAD,CAAaf,cAAeA,IAC5B,uBACA,6BACG4C,EAAWlB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,YCTxB4B,IAASC,OAAO,cAAC,EAAD,IAAYC,SAASC,eAAe,W","file":"static/js/main.75970536.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((cat) => [inputValue, ...cat]);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        placeholder=\"Ej: Studio Ghibli\"\n        className=\"input is-rounded\"\n      />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=SDeQeaPOdOnwKdDpTgEPYCzBE99meXqa`;\n\n  const resp = await fetch(url);\n\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n};\n","import React from \"react\";\n\nexport const GridListItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p className=\"subtitle is-6\">{title}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GridListItem } from \"../components/GridListItem\";\nexport const GifList = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      {loading && (\n        <p className=\"animate__animated animate__flash\">Loading...</p>\n      )}\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GridListItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true,\n  });\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setstate({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n  return state;\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifList } from \"./components/GifList\";\n\nexport const GifApp = () => {\n  const [categories, setCategories] = useState([\"Studio Ghibli\"]);\n\n  return (\n    <div>\n      <h1 className=\"title\">Gif App</h1>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((category) => (\n          <GifList key={category} category={category} />\n        ))}\n      </ol>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifApp } from \"./GifApp\";\nimport \"bulma/css/bulma.min.css\";\nimport \"./index.css\";\nReactDOM.render(<GifApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}